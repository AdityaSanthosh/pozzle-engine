schema {
  query: Query
}

type Query {
  aws_lambda_1: aws_lambda_1Query!
}

type AWSLambda_ListFunctionsResponse {
  functions: [AWSLambda_FunctionsListItem]
  """The pagination token that's included if more results are available."""
  nextMarker: String
}

type AWSLambda_FunctionsListItem {
  """The SHA256 hash of the function's deployment package."""
  codeSha256: String
  """The size of the function's deployment package, in bytes."""
  codeSize: Int
  """The function's dead letter queue."""
  deadLetterConfig: AWSLambda_DeadLetterConfig
  """The function's description."""
  description: String
  """
  The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html">environment variables</a>.
  """
  environment: AWSLambda_Environment
  """
  Connection settings for an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html">Amazon EFS file system</a>.
  """
  fileSystemConfigs: [AWSLambda_FileSystemConfigsListItem]
  """The function's Amazon Resource Name (ARN)."""
  functionArn: String
  """The name of the function."""
  functionName: String
  """The function that Lambda calls to begin executing your function."""
  handler: String
  """The function's image configuration values."""
  imageConfigResponse: AWSLambda_ImageConfigResponse
  """
  The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed CMK.
  """
  kMSKeyArn: String
  """
  The date and time that the function was last updated, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
  """
  lastModified: String
  """
  The status of the last update that was performed on the function. This is first set to <code>Successful</code> after function creation completes.
  """
  lastUpdateStatus: AWSLambda_LastUpdateStatus
  """The reason for the last update that was performed on the function."""
  lastUpdateStatusReason: String
  """
  The reason code for the last update that was performed on the function.
  """
  lastUpdateStatusReasonCode: AWSLambda_LastUpdateStatusReasonCode
  """
  The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"> layers</a>.
  """
  layers: [AWSLambda_LayersListItem]
  """For Lambda@Edge functions, the ARN of the master function"""
  masterArn: String
  """The amount of memory available to the function at runtime. """
  memorySize: Int
  """
  The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for .zip file archive.
  """
  packageType: AWSLambda_PackageType
  """The latest updated revision of the function or alias."""
  revisionId: String
  """The function's execution role."""
  role: String
  """The runtime environment for the Lambda function."""
  runtime: AWSLambda_Runtime
  """The ARN of the signing job."""
  signingJobArn: String
  """The ARN of the signing profile version."""
  signingProfileVersionArn: String
  """
  The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by invoking it.
  """
  state: AWSLambda_State
  """The reason for the function's current state."""
  stateReason: String
  """
  The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or modify the function.
  """
  stateReasonCode: AWSLambda_StateReasonCode
  """
  The amount of time in seconds that Lambda allows a function to run before stopping it.
  """
  timeout: Int
  """The function's X-Ray tracing configuration."""
  tracingConfig: AWSLambda_TracingConfig
  """The version of the Lambda function."""
  version: String
  """The function's networking configuration."""
  vpcConfig: AWSLambda_VpcConfig
}

"""The function's dead letter queue."""
type AWSLambda_DeadLetterConfig {
  """
  The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
  """
  targetArn: String
}

"""
The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html">environment variables</a>.
"""
type AWSLambda_Environment {
  """Error messages for environment variables that couldn't be applied."""
  error: AWSLambda_Error
  """Environment variable key-value pairs."""
  variables: JSON
}

"""Error messages for environment variables that couldn't be applied."""
type AWSLambda_Error {
  """The error code."""
  errorCode: String
  """The error message."""
  message: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type AWSLambda_FileSystemConfigsListItem {
  """
  The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.
  """
  arn: String!
  """
  The path where the function can access the file system, starting with <code>/mnt/</code>.
  """
  localMountPath: String!
}

"""The function's image configuration values."""
type AWSLambda_ImageConfigResponse {
  """Error response to GetFunctionConfiguration."""
  error: AWSLambda_Error2
  """Configuration values that override the container image Dockerfile."""
  imageConfig: AWSLambda_ImageConfig
}

"""Error response to GetFunctionConfiguration."""
type AWSLambda_Error2 {
  """Error code."""
  errorCode: String
  """Error message."""
  message: String
}

"""Configuration values that override the container image Dockerfile."""
type AWSLambda_ImageConfig {
  """Specifies parameters that you want to pass in with ENTRYPOINT. """
  command: [String]
  """
  Specifies the entry point to their application, which is typically the location of the runtime executable.
  """
  entryPoint: [String]
  """Specifies the working directory."""
  workingDirectory: String
}

enum AWSLambda_LastUpdateStatus {
  SUCCESSFUL
  FAILED
  INPROGRESS
}

enum AWSLambda_LastUpdateStatusReasonCode {
  ENILIMITEXCEEDED
  INSUFFICIENTROLEPERMISSIONS
  INVALIDCONFIGURATION
  INTERNALERROR
  SUBNETOUTOFIPADDRESSES
  INVALIDSUBNET
  INVALIDSECURITYGROUP
  IMAGEDELETED
  IMAGEACCESSDENIED
  INVALIDIMAGE
}

type AWSLambda_LayersListItem {
  """The Amazon Resource Name (ARN) of the function layer."""
  arn: String
  """The size of the layer archive in bytes."""
  codeSize: Int
  """The Amazon Resource Name (ARN) of a signing job."""
  signingJobArn: String
  """The Amazon Resource Name (ARN) for a signing profile version."""
  signingProfileVersionArn: String
}

enum AWSLambda_PackageType {
  ZIP
  IMAGE
}

enum AWSLambda_Runtime {
  NODEJS
  NODEJS4_3
  NODEJS6_10
  NODEJS8_10
  NODEJS10_X
  NODEJS12_X
  NODEJS14_X
  JAVA8
  JAVA8_AL2
  JAVA11
  PYTHON2_7
  PYTHON3_6
  PYTHON3_7
  PYTHON3_8
  PYTHON3_9
  DOTNETCORE1_0
  DOTNETCORE2_0
  DOTNETCORE2_1
  DOTNETCORE3_1
  NODEJS4_3_EDGE
  GO1_X
  RUBY2_5
  RUBY2_7
  PROVIDED
  PROVIDED_AL2
}

enum AWSLambda_State {
  PENDING
  ACTIVE
  INACTIVE
  FAILED
}

enum AWSLambda_StateReasonCode {
  IDLE
  CREATING
  RESTORING
  ENILIMITEXCEEDED
  INSUFFICIENTROLEPERMISSIONS
  INVALIDCONFIGURATION
  INTERNALERROR
  SUBNETOUTOFIPADDRESSES
  INVALIDSUBNET
  INVALIDSECURITYGROUP
  IMAGEDELETED
  IMAGEACCESSDENIED
  INVALIDIMAGE
}

"""The function's X-Ray tracing configuration."""
type AWSLambda_TracingConfig {
  """The tracing mode."""
  mode: AWSLambda_Mode
}

enum AWSLambda_Mode {
  ACTIVE
  PASSTHROUGH
}

"""The function's networking configuration."""
type AWSLambda_VpcConfig {
  """A list of VPC security groups IDs."""
  securityGroupIds: [String]
  """A list of VPC subnet IDs."""
  subnetIds: [String]
  """The ID of the VPC."""
  vpcId: String
}

enum AWSLambda_FunctionVersion {
  ALL
}

type aws_lambda_1Query {
  """
  <p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>
  
  Equivalent to GET /2015-03-31/functions/
  """
  listFunctionsResponse(
    """
    Set to <code>ALL</code> to include entries for all published versions of each function.
    """
    functionVersion: AWSLambda_FunctionVersion
    """
    Specify the pagination token that's returned by a previous request to retrieve the next page of results.
    """
    marker: String
    """
    For Lambda@Edge functions, the Amazon Web Services Region of the master function. For example, <code>us-east-1</code> filters the list of functions to only include Lambda@Edge functions replicated from a master function in US East (N. Virginia). If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.
    """
    masterRegion: String
    """
    The maximum number of functions to return in the response. Note that <code>ListFunctions</code> returns a maximum of 50 items in each response, even if you set the number higher.
    """
    maxItems: Int
  ): AWSLambda_ListFunctionsResponse
}