generator client {
  provider = "prisma-client-js"
  output   = "../src/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  workspaceId         String                @id @default(uuid())
  email               String?
  name                String?
  slug                String                @unique
  ExtensionDefinition ExtensionDefinition[]
  ExtensionAccount    ExtensionAccount[]
  ExtensionRouter     ExtensionRouter[]
  deleted             DateTime?
}

model ExtensionDefinition {
  extensionDefinitionId String             @id @default(uuid())
  name                  String
  dockerImageTag        String
  dockerRepository      String
  icon                  String?
  releaseStage          ReleaseStage       @default(ALPHA)
  extensionType         ExtensionType      @default(GRAPHQL)
  workspace             Workspace?         @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId           String?
  spec                  Json
  ExtensionAccount      ExtensionAccount[]
  ExtensionRouter       ExtensionRouter[]
  deleted               DateTime?
}

model ExtensionAccount {
  extensionAccountId     String              @id @default(uuid())
  extensionDefinition    ExtensionDefinition @relation(references: [extensionDefinitionId], fields: [extensionDefinitionId])
  extensionDefinitionId  String
  extensionConfiguration Json?
  workspace              Workspace?          @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId            String?
  name                   String
  extensionAccountName   String              @unique
  ExtensionSchema        ExtensionSchema[]
  deleted                DateTime?
}

model ExtensionRouter {
  extensionRouterId     String              @id @default(uuid())
  extensionDefinition   ExtensionDefinition @relation(references: [extensionDefinitionId], fields: [extensionDefinitionId])
  extensionDefinitionId String              @unique
  endpoint              String
  workspace             Workspace?          @relation(references: [workspaceId], fields: [workspaceId])
  workspaceId           String?
  deleted               DateTime?
}

model ExtensionSchema {
  extensionSchemaId  String              @id @default(uuid())
  type               ExtensionSchemaType
  schema             Json
  extensionAccount   ExtensionAccount    @relation(references: [extensionAccountId], fields: [extensionAccountId])
  extensionAccountId String
  deleted            DateTime?
}

enum ExtensionType {
  GRAPHQL
  OPENAPI
  CUSTOM
}

enum ExtensionSchemaType {
  GRAPHQL
  OPENAPI
  CUSTOM
}

enum ReleaseStage {
  ALPHA
  BETA
  GENERALLY_AVAILABLE
  CUSTOM
}
