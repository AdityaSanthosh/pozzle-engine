# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ExtensionAccount {
  createdAt: DateTime!
  deleted: DateTime
  extensionAccountId: ID!
  extensionAccountName: String!
  extensionConfiguration: JSON
  extensionDefinition: ExtensionDefinition!
  extensionDefinitionId: String!
  name: String!
  updatedAt: DateTime!
  workspace: Workspace!
  workspaceId: String!
}

input ExtensionAccountCreateBody {
  extensionAccountName: String!
  extensionConfiguration: JSON
  extensionDefinitionId: String!
  workspaceId: String!
}

input ExtensionAccountGetRequestBody {
  workspaceId: String!
}

input ExtensionAccountRequestIdBody {
  extensionAccountId: String!
  workspaceId: String!
}

type ExtensionDefinition {
  ExtensionAccount: [ExtensionAccount!]
  ExtensionRouter: [ExtensionRouter!]
  _count: ExtensionDefinitionCount!
  createdAt: DateTime!
  deleted: DateTime
  dockerImageTag: String!
  dockerRepository: String!
  extensionDefinitionId: ID!
  extensionType: ExtensionType!
  icon: String
  name: String!
  releaseStage: ReleaseStage!
  updatedAt: DateTime!
  workspace: Workspace
  workspaceId: String
}

type ExtensionDefinitionCount {
  ExtensionAccount: Int!
  ExtensionRouter: Int!
}

input ExtensionDefinitionCreateBody {
  dockerImageTag: String!
  dockerRepository: String!
  extensionType: String!
  name: String!
  workspaceId: String!
}

input ExtensionDefinitionRequestIdBody {
  extensionDefinitionId: String!
}

input ExtensionDefinitionRequestWorkspaceIdBody {
  workspaceId: String!
}

type ExtensionRouter {
  createdAt: DateTime!
  deleted: DateTime
  endpoint: String!
  extensionDefinition: ExtensionDefinition!
  extensionDefinitionId: String!
  extensionRouterId: ID!
  updatedAt: DateTime!
  workspace: Workspace!
  workspaceId: String!
}

enum ExtensionType {
  CUSTOM
  GRAPHQL
  OPENAPI
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createExtensionAccount(data: ExtensionAccountCreateBody!): ExtensionAccount!
  createExtensionDefinition(data: ExtensionDefinitionCreateBody!): ExtensionDefinition!
  createWorkspace(data: WorkspaceCreateBody!): Workspace!
  deleteWorkspace(data: WorkspaceRequestIdBody!): Workspace!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

type Query {
  getExtensionAccount(data: ExtensionAccountRequestIdBody!): ExtensionAccount!
  getExtensionDefinitionById(data: ExtensionDefinitionRequestIdBody!): ExtensionDefinition!
  getExtensionDefinitions: [ExtensionDefinition!]!
  getExtensionDefinitionsByWorkspace(data: ExtensionDefinitionRequestWorkspaceIdBody!): [ExtensionDefinition!]!
  getWorkspaceWithId(data: WorkspaceRequestIdBody!): Workspace!
  getWorkspaces: [Workspace!]!
  me: User!
  userPosts(data: ExtensionAccountGetRequestBody!): [ExtensionAccount!]!
}

enum ReleaseStage {
  ALPHA
  BETA
  CUSTOM
  GENERALLY_AVAILABLE
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  Workspace: [Workspace!]
  _count: UserCount!
  createdAt: DateTime!
  email: String!
  firstname: String
  lastname: String
  password: String!
  updatedAt: DateTime!
  userId: ID!
}

type UserCount {
  Workspace: Int!
}

type Workspace {
  ExtensionAccount: [ExtensionAccount!]
  ExtensionDefinition: [ExtensionDefinition!]
  ExtensionRouter: [ExtensionRouter!]
  _count: WorkspaceCount!
  deleted: DateTime
  slug: String!
  user: User!
  userId: String!
  workspaceId: ID!
}

type WorkspaceCount {
  ExtensionAccount: Int!
  ExtensionDefinition: Int!
  ExtensionRouter: Int!
}

input WorkspaceCreateBody {
  slug: String!
}

input WorkspaceRequestIdBody {
  workspaceId: String!
}